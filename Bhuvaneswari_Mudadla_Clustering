# Combine customer profile and transaction data
segmentation_data = merged_data.groupby('CustomerID').agg(
    total_spend=('TotalValue', 'sum'),
    avg_spend=('TotalValue', 'mean'),
    transaction_count=('TransactionID', 'count')
).reset_index()

# Normalize the data
segmentation_data[numerical_features] = scaler.fit_transform(segmentation_data[numerical_features])

# Apply KMeans Clustering
kmeans = KMeans(n_clusters=5, random_state=42)
segmentation_data['Cluster'] = kmeans.fit_predict(segmentation_data[numerical_features])

# Visualize clusters using PCA
pca = PCA(n_components=2)
pca_components = pca.fit_transform(segmentation_data[numerical_features])

plt.figure(figsize=(8, 6))
sns.scatterplot(x=pca_components[:, 0], y=pca_components[:, 1], hue=segmentation_data['Cluster'], palette='Set1')
plt.title('Customer Segmentation (PCA)')
plt.show()

# Calculate DB Index and Silhouette Score
db_index = davies_bouldin_score(segmentation_data[numerical_features], segmentation_data['Cluster'])
silhouette = silhouette_score(segmentation_data[numerical_features], segmentation_data['Cluster'])
print(f"DB Index: {db_index}")
print(f"Silhouette Score: {silhouette}")
